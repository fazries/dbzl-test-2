apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana-logging
  namespace: default
  labels:
    k8s-app: kibana-logging
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kibana-logging
  template:
    metadata:
      labels:
        k8s-app: kibana-logging
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
      containers:
      - name: kibana-logging
        image: "{{ .Values.kibana.image.repository }}:{{ .Values.kibana.image.tag }}"
        imagePullPolicy: {{ .Values.kibana.image.pullPolicy }}
        resources:
          # need more cpu upon initialization, therefore burstable class
          limits:
            cpu: {{ .Values.kibana.resource.cpu_lim }}
            memory: {{ .Values.kibana.resource.mem_lim }}
          requests:
            cpu: {{ .Values.kibana.resource.cpu_req }}
            memory: {{ .Values.kibana.resource.mem_req }}
        env:
          - name: ELASTICSEARCH_HOSTS
            value: "http://{{ .Values.service.selector }}-cluster:9200"
          - name: SERVER_NAME
            value: kibana-logging
        ports:
        - containerPort: 5601
          name: ui
          protocol: TCP

---          
apiVersion: v1
kind: Service
metadata:
  name: kibana-logging
  labels:
    k8s-app: kibana-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "Kibana"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    protocol: TCP
    targetPort: ui
  selector:
    k8s-app: kibana-logging
